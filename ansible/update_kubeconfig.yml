---
- name: 'Get remote kubeconfig data'
  hosts: master01
  gather_facts: false
  tasks:
    - name: Extract server
      shell: kubectl config view --raw --minify --output=jsonpath='{.clusters[0].cluster.server}'
      register: kube_server

    - name: Save server
      set_fact:
        kube_server: "{{ kube_server.stdout_lines[0] }}"

    - name: Extract ca.crt
      shell: kubectl config view --raw --minify --output=jsonpath='{.clusters[0].cluster.certificate-authority-data}'
      register: ca_crt

    - name: Save ca.crt
      set_fact:
        ca_crt: "{{ ca_crt.stdout_lines[0] }}"

    - name: Extract client.crt
      shell: kubectl config view --raw --minify --output=jsonpath='{.users[0].user.client-certificate-data}'
      register: client_crt

    - name: Save client.crt
      set_fact:
        client_crt: "{{ client_crt.stdout_lines[0] }}"

    - name: Extract client.key
      shell: kubectl config view --raw --minify --output=jsonpath='{.users[0].user.client-key-data}'
      register: client_key

    - name: Save client.key
      set_fact:
        client_key: "{{ client_key.stdout_lines[0] }}"

- hosts: 127.0.0.1
  connection: local
  vars:
    context_name: virtualbox
    server_name: virtualbox
    user_name: admin
    data_location: "$HOME/kube-config/{{ server_name }}"
    ca_crt_location: "{{ data_location }}/ca.crt"
    client_crt_location: "{{ data_location }}/client.crt"
    client_key_location: "{{ data_location }}/client.key"
  tasks:
    - name: "Create {{ data_location }} directory"
      file:
        path: "$HOME/kube-config/{{ server_name }}"
        state: directory
        mode: 0755

    - name: Create ca.crt local file
      shell: "echo \"{{ hostvars['master01'].ca_crt }}\" | base64 -d > {{ ca_crt_location }}"

    - name: Create client.crt local file
      shell: "echo \"{{ hostvars['master01'].client_crt }}\" | base64 -d > {{ client_crt_location }}"

    - name: Create client.key local file
      shell: "echo \"{{ hostvars['master01'].client_key }}\" | base64 -d > {{ client_key_location }}"

    - name: Update kubeconfig
      shell: |
        kubectl config set-cluster {{ server_name }} --server={{ hostvars['master01'].kube_server }} --embed-certs=true --certificate-authority={{ ca_crt_location }}
        kubectl config set-credentials {{ user_name }} --client-certificate={{ client_crt_location }} --client-key={{ client_key_location }}
        kubectl config set-context {{ context_name }} --cluster={{ server_name }} --user={{ user_name }}

    - name: "Use {{ context_name }} context"
      shell: kubectl config use-context {{ context_name }}